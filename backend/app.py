from flask import Flask, jsonify, request
from flask_cors import CORS

from helper import *

app = Flask(__name__)
CORS(app)

# L2R home page
@app.route('/', methods=['GET'])
def home():
    return jsonify({"message": "Welcome to L2Review!"})

# Analyze user inputs and explain mistakes
@app.route("/process_text", methods=['POST'])
def process_text():
    data = request.get_json()
    language: str = data.get("lang")
    text: str = data.get("text")
    
    sentences = split_into_sentences(text)
    results = [] # For each sentence, there will be a string with mistakes generated by GPT
    
    for sentence in sentences:
        mistakes = get_sentence_grammar_mistakes(language, sentence)
        results.append(mistakes)
        
    return jsonify({"results" : results})

# Respond to user inputs
@app.route("/respond", methods=['POST'])
def text_response():
    data = request.get_json()
    language: str = data.get("lang")
    text: str = data.get("text")
    
    results = get_text_response(language, text)
        
    return jsonify({"results" : results})

# Generate discussion prompts
@app.route("/prompts")
def generate_prompts():
	language: str = request.args.get("lang")
	category: str = call_api("You're teaching a {language} class, and are coming up with a topic for your students to talk about. \
     In one or two words, generate a category of topics that would be good for someone to talk about when they are learning {language}. \
     Respond with only the category name. Your response should only be one or two words total.", "")
	prompts: str = call_api(f"In the category of {category.content}, come up with four prompts, each around one or two sentences in english, \
     for someone who is learning {language} to respond to. Respond with only the text needed for the prompts, with no other formatting. \
     Use fewer than 100 words total. Separate each prompt with $$$. Make sure the prompts are in English.", "")
	return {"category": category.content, "prompts": prompts.content.replace("\n", "").split(".")}

if __name__ == "__main__":
    app.run(debug=True)